@model PagedList.IPagedList<WebBanHangOnline.Models.EF.ReviewProduct>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Quản lý đánh giá";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section naviheader {
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/category" class="nav-link">Danh mục</a>
        </li>
    </ul>
}
<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Quản lý đánh giá</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Danh mục</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">
    <!-- Default box -->
    <div class="card aurora-background">
        <div class="card-header">
            <h3 class="card-title text-center fw-bold">Danh sách đánh giá</h3>
            
        </div>
        <div class="card-body">
            <table class="table table-bordered table-hover text-center table-striped" id="reviewTable">
                <thead >
                    <tr>
                        <th>Sản phẩm</th>
                        <th>Người đánh giá</th>
                        <th>Nội dung</th>
                        <th>Điểm</th>
                        <th>Ngày tạo</th>
                        <th>Trạng thái</th>
                        <th style="width: 150px;">Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        foreach (var item in Model)
                        {
                            <tr data-id="@item.Id">
                                <td>@item.Product.Title</td>
                                <td>@item.FullName</td>
                                <td>@item.Content</td>
                                <td>@item.Rate</td>
                                <td>@item.CreatedDate.ToString("dd/MM/yyyy")</td>
                                <td>
                                    <button class="btn btn-sm toggle-status @(item.IsActive ? "btn-success" : "btn-warning")"
                                            data-id="@item.Id"
                                            data-status="@item.IsActive.ToString().ToLower()">
                                        @(item.IsActive ? "Đã duyệt" : "Chưa duyệt")
                                    </button>
                                </td>
                                <td>
                                    <a href="#" class="btn btn-sm btn-danger deleteItem" data-id="@item.Id">Xóa</a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="text-center">Không có đánh giá nào.</td>
                        </tr>
                    }
                </tbody>
            </table>

            
        </div>
        <!-- /.card-body -->
        <div class="card-footer text-center">
            <!-- Phân trang -->
            <div class="pagination-container">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
                    new PagedListRenderOptions
                    {
                        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                        DisplayLinkToLastPage = PagedListDisplayMode.Always,
                        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                        DisplayLinkToNextPage = PagedListDisplayMode.Always,
                        MaximumPageNumbersToDisplay = 5,
                        DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                        LinkToPreviousPageFormat = "«",
                        LinkToNextPageFormat = "»"
                    })
                <div class="pagination-info">
                    Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
                    (Tổng cộng @Model.TotalItemCount đánh giá)
                </div>
            </div>
        </div>
        <!-- /.card-footer-->
    </div>
    <!-- /.card -->
</section>
<!-- /.content -->



@section scripts {
    <script>
        $(document).ready(function () {
            // Hàm hiển thị thông báo
            function showNotification(type, message) {
                if (typeof toastr !== "undefined") {
                    if (type === "success") {
                        toastr.success(message);
                    } else if (type === "error") {
                        toastr.error(message);
                    } else if (type === "warning") {
                        toastr.warning(message);
                    }
                } else {
                    alert(message);
                }
            }

            // Xóa đánh giá
            $(".deleteItem").click(function (e) {
                e.preventDefault();
                var id = $(this).data("id");
                var row = $(this).closest("tr");

                if (confirm("Bạn có chắc muốn xóa đánh giá này?")) {
                    $.ajax({
                        url: '@Url.Action("Delete", "Review", new { area = "Admin" })',
                        type: "POST",
                        data: { id: id },
                        headers: {
                            "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (result) {
                            if (result.success) {
                                row.remove();
                                if ($("#reviewTable tbody tr").length === 0) {
                                    $("#reviewTable tbody").html('<tr><td colspan="7" class="text-center">Không có đánh giá nào.</td></tr>');
                                }
                                showNotification("success", result.message || "Xóa thành công!");
                                // Tải lại trang để cập nhật phân trang
                                location.reload();
                            } else {
                                showNotification("error", result.message || "Xóa thất bại!");
                            }
                        },
                        error: function (xhr, status, error) {
                            showNotification("error", "Đã xảy ra lỗi khi xóa đánh giá: " + error);
                        }
                    });
                }
            });

            // Toggle trạng thái đánh giá
            $(".toggle-status").click(function () {
                var button = $(this);
                var id = button.data("id");
                var currentStatus = button.data("status") === "true";

                $.ajax({
                    url: '@Url.Action("ToggleStatus", "Review", new { area = "Admin" })',
                    type: "POST",
                    data: { id: id },
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (result) {
                        if (result.success) {
                            // Cập nhật trạng thái trên giao diện
                            button.data("status", result.isActive);
                            button.text(result.isActive ? "Đã duyệt" : "Chưa duyệt");
                            button.removeClass("btn-success btn-warning");
                            button.addClass(result.isActive ? "btn-success" : "btn-warning");
                            showNotification("success", result.message || "Thay đổi trạng thái thành công!");
                        } else {
                            showNotification("error", result.message || "Thay đổi trạng thái thất bại!");
                        }
                    },
                    error: function (xhr, status, error) {
                        showNotification("error", "Đã xảy ra lỗi khi thay đổi trạng thái: " + error);
                    }
                });
            });
        });
    </script>

    <style>
        .pagination-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 20px;
        }

        .pagination-info {
            font-size: 14px;
            color: #555;
        }

        .pagination > li > a, .pagination > li > span {
            padding: 6px 12px;
            margin: 0 2px;
            border: 1px solid #ddd;
            color: #007bff;
        }

        .pagination > li.active > a, .pagination > li.active > span {
            background-color: #007bff;
            color: white;
            border-color: #007bff;
        }
    </style>
}